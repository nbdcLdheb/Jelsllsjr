--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,bd)local bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr=116,73,41,42,69,60,68,65,69,55,48,50,76,25,49,19,46,97,42,79,45,37,45,16,56,12,13,81,19,57,58,91,64,48,51,57,27,29,64,52,61,76,87,60,84,35,38,43,53,21,13 while bd~=75 do if be>=782 then if be<=1133 then if be<=914 then if be<=808 then if be<804 then be=808 cb=''else be=838 do bs=(2^52)end end else if be>=867 then if be>876 then be=959 do for bd=1,31 do bf[bd]=cg cg=(cg*2)end end else cg=2 be=914 end else be=867 bf={[0]=1}end end else if be>=1052 then if be>=1085 then if be>1087 then cc=function()local bd bd=br(cr,bz,bz)bz=(bz+1);return bd;end be=1170 else cp=function()local bd,cs,ct,cu bd,cs,ct,cu=br(cr,bz,(bz+3))bz=(bz+4);return((cu*16777216)+(ct*y)+(cs*256)+bd);end be=1133 end else do bz=1 end be=1085 end else if be<=959 then ce=function(y,bd,cs,ct,ct)local ct,cu,cv=86,62,23,29,20,31,18,60,62,85,87,33,86,38 while ct~=39 do if cu>=144 then if cu<=144 then cu=184 cv=(cv-cv%1)else if cu<215 then cu=220 do return cv end else ct=39;end end else if cu<=62 then cu=81 cv=nil else if cu>90 then cu=144 cv=((bd/bf[y])%bf[cs])else cu=127 cv=nil end end end end end be=991 else if be<1035 then bo=(bit_lib and bit_lib.bxor or function(y,bd)y=y%(2^32)bd=bd%(2^32)local cs,ct=0,1 while y>0 and bd>0 do local cu,cv=y%16,bd%16 cs=cs+bx[cu+1][cv+1]*ct y=(y-cu)/16 bd=(bd-cv)/16 ct=ct*16 end cs=cs+y*ct+bd*ct return cs end)be=1037 else be=1052 cq=function(y,bd,cs,ct)local ct do ct=((y/v^(bd-1))%2^((cs-1)-(bd-1)+n))end return(ct-ct%1);end end end end end else if be>=1344 then if be<=1429 then if be<=1344 then cj=function(n,v,v)local v,y,bd,cs,ct,cu,cv,cw=53,53,43,66,74,52,29,11,90,47,68,38,93,14,20,19,72,26,74,80,95,98,67,13 while v~=39 do if y<=284 then if y<=168 then if y>=145 then if y<161 then do ct={}end y=168 else cv={}y=193 end else if y>62 then y=145 cs={}else y=100 bd,cs,ct,cu,cv,cw=nil end end else if y<=226 then if y<220 then y=226 cu=cp()else for cx=(#bj+1),(#bj+cu)do local cu,cy,cz,da,db=84,33,40,61,63,52,55,51,33,71,93,95,91,67,76,60,63,35,67,93,85,16 while cu~=51 do if cy>=281 then if cy<=360 then if cy<=307 then if cy>283 then da[51]=cq(cz,12,20);cy=337 else da[103]=cq(cz,3,u);cy=307 end else if cy>340 then cy=377 da[31]=cq(db,12,33);else do da[50]=cq(cz,21,29);end cy=360 end end else if cy<=401 then if cy>382 then cy=416 da[73]=-da[50]else cy=401 da[195]=-da[103]end else if cy>424 then cu=51;else cy=453 bj[cx]=da;end end end else if cy<=115 then if cy>=78 then if cy>81 then do cz=cp()end cy=159 else cy=115 da[58]=cc();end else if cy>42 then da={}cy=78 else cy=50 cz,da,db=nil end end else if cy<=182 then if cy<176 then cy=182 db=cp()else cy=231 da[36]=cc();end else if cy>238 then cy=281 da[139]=cq(db,1,11);else do da[88]=cq(cz,1,2);end cy=247 end end end end end end y=250 end else if y>252 then y=301 bd={}else y=284 cw=cp()end end end else if y>=384 then if y>=429 then if y>=457 then if y<495 then y=501 return cv;else v=39;end else cv[92]=cc();y=457 end else if y<396 then y=400 for u=1,cp()do ct[u-1]=cj();end else cv[23]=ct;y=429 end end else if y>=336 then if y<358 then y=361 for u=1,cp()do local v,ct,cu,cx,cy,cz=67,49,87,33,87,49,82,97,92,23,73,14,25,73,15,39,70,41,87,51,47,19,89,50 while v~=53 do if ct>=363 then if ct<=469 then if ct>=453 then if ct<467 then cy[31]=cq(cz,12,33);ct=469 else cy[50]=cq(cu,21,a);ct=498 end else if ct>371 then cy[103]=cq(cu,3,11);ct=453 else ct=407 cy[139]=cq(cz,1,ba);end end else if ct>=569 then if ct<=569 then ct=608 cy[73]=-cy[50]else if ct>614 then break else ct=630 do cs[u]=cy;end end end else if ct<531 then do cy[36]=cq(cu,12,20);end ct=538 else do cy[195]=-cy[103]end ct=569 end end end else if ct>=205 then if ct>=249 then if ct>=287 then if ct>292 then ct=363 do cy[88]=cx end else cx=cq(cu,t,2)ct=331 end else ct=287 do cz=cp()end end else if ct<219 then ct=221 if not(cc()~=1)then for a=1,cc()do cy[65][a]={cc()==0,cp()}end end else cu=cp()ct=249 end end else if ct<=72 then if ct<65 then ct=72 cu,cx,cy,cz=nil else ct=121 cy={{},nil}end else if ct<162 then ct=169 cy[58]=cc();else cy[65]={};ct=205 end end end end end end else cv[27]=cs;y=384 end else if y<317 then y=321 for a=1,cw do local t,u,v,ba=71,53,12,37,31,43,98,94,97,81,94,74,88,33,73,52 while t~=42 do if u<=144 then if u<=53 then u=100 v,ba=nil else if u>102 then ba=nil u=169 else v=cc()u=144 end end else if u<=169 then u=188 if(0==v)then do ba=(0~=cc());end elseif(not(v~=1))then ba=cn();elseif(4==v)then ba=by();elseif(not(v~=2))then ba=n[by()];end;else if u>197 then t=42;else u=211 bd[a]=ba;end end end end end else cv[35]=bd y=336 end end end end end end be=1380 else if be<1427 then cf={}be=1429 else be=1468 bn={}end end else if be>=1504 then if be>1510 then break else be=1527 return bq(cj(co()),{},co())();end else be=1504 bq=function(a,n,t,u,u)local u,v,y,ba,bd bd=cf u=a[23]v=a[35]ba=a[92]do y=a[27]end return function(...)local a,bd,cs,ct,cu,cv,cw,cx,cy cv=1 cs=-1 a=-1 do cx={}end do cw={...}end cu=(bg('#',...)-i)bd={}cy={}do for a=0,cu do if(not(a<ba))then cx[(a-ba)]=cw[(a+1)];else cy[a]=cw[(a+1)];end;end;end ct=(cu-ba+1)while true do local a,i,ba,ct,cu,cw,cx,cz,da,db do ba=y[cv]end cw=ba[139]db=ba[58]i=ba[103]a=ba[51]ct=ba[50]cz=ba[36]do cx=ba[195]end cu=ba[d]da=ba[73]if not(cw<28)then if not(cw<42)then if not(cw<49)then if not(cw<53)then if not(ba[139]>54)then if not(cw~=53)then local a,d,y y=i d=cy[y]a=cy[(y+2)]if((a>0))then if((d>cy[y+1]))then cv=cu;else cy[(y+3)]=d;end elseif((d<cy[y+1]))then cv=cu;else cy[(y+3)]=d;end else cy[ba[103]]=n[ba[31]];end else do if(cw<56)then cy[i]=(cy[ba[31]]*v[ct]);else local a,d a=i d={}if(#bd>0)then for y=1,#bd do local cx do cx=bd[y]end do for y=0,#cx do local cz,da,db cz=cx[y]do db=cz[1]end da=cz[2]if(db==cy and da>=0)then do d[da]=db[da]end cz[1]=d end end end end end return cy[a],cy[(a+1)]end end end else if not(ba[139]<51)then if(cw<52)then local a,d,y,cx y=i d=((ct-h)*50)do cx=cy[y]end a=(cs-y)for h=1,a do cx[(d+h)]=cy[(y+h)]end;else cy[i]=#cy[cu];end else do if(cw>49)then local a a=i cy[a]=cy[a](bi(cy,a+1,cu));else cy[ba[103]]=(cy[cu]+cy[ct]);end end end end else if not(cw<45)then if not(cw<47)then if(ba[139]>47)then v=cf[i](v)else cy[ba[103]]=v[cu]end else if not(cw~=45)then cy[i]=bq(u[cu],nil,t);else cy[i][v[ba[31]]]=v[ct];end end else if not(cw>42)then cy[ba[103]]=cy[ba[f]][cy[ct]];else if(cw>43)then if(not(cy[i]~=cy[ba[50]]))then do cv=cu;end end;else local a do a=i end cy[a]=cy[a](cy[a+c]);end end end end else if not(cw<35)then if not(cw<38)then do if not(cw>39)then if(cw<39)then local a,c,d a=i do d=cy[a]end c=cu do for f=1,c do d[f]=cy[(a+f)]end;end else local a do a=i end cy[a]=cy[a]();end else if 40==cw then if(not(cy[i]==cy[ct]))then cv=cu;end;else local a,c,d,f,h do c=i end do h=ba[j]end f=(c+2)d={cy[c](cy[c+1],cy[f])}for j=1,h do cy[(f+j)]=d[j]end a=cy[(c+3)]if a then do cy[f]=a end else cv=ba[31];end;end end end else if not(cw<36)then if(cw<37)then cy[i]={};else local a,c,d,f d=i c={cy[d]()}f=ct a=0 do for h=d,f do a=(a+1);cy[h]=c[a];end end end else local a,c,d a=i do c=cy[(a+2)]end d=(cy[a]+c)do cy[a]=d;end if((c>0))then while(d<=cy[a+1])do cv=ba[31];cy[a+3]=d;break end elseif(not(d<cy[a+1]))then cv=cu;cy[(a+3)]=d;end end end else if not(ba[139]>30)then if not(cw>28)then cy[i]=(cy[cu]-cy[ct]);else if not(ba[139]~=29)then cy[i]=cy[cu];else local a,c c=cu a=cy[c]do for d=(c+1),ct do do a=(a..cy[d]);end end;end cy[i]=a;end end else do if not(ba[139]>32)then if(ba[139]<32)then if(v[ct]==cy[i])then cv=cu;end;else if(not(cy[i]==v[ct]))then cv=cu;end;end else if(cw<34)then local a do a={}end if(#bd>0)then for c=1,#bd do local d d=bd[c]for c=0,#d do local f,h,j j=d[c]h=j[1]f=j[2]do if(h==cy and f>=0)then do a[f]=h[f]end do j[1]=a end end end end end end do return 0,ba[i],ba[ba[51]];end else local a,c,d c=i a={cy[c](bi(cy,c+1,cs))}d=0 for f=c,ct do d=(d+1);cy[f]=a[d];end end end end end end end else if not(cw>13)then do if not(cw<7)then if not(cw>9)then if not(cw>7)then local a a=i cy[a](bi(cy,(a+1),cs))else if 8==cw then if((cy[i]<cy[ct]))then cv=cu;end;else do cy[ba[103]]=(cy[cu]-v[ct]);end end end else if not(cw<12)then if not(cw~=12)then local a a=i cy[a]=cy[a](bi(cy,a+1,cs));else for a=i,cu do cy[a]=nil;end;end else if(cw<11)then local a,c,d c=i d={cy[c](cy[c+1])}do a=0 end for f=c,ba[50]do do a=(a+1);end cy[f]=d[a];end else cy[ba[r]][cy[cu]]=cy[ct];end end end else do if not(cw<3)then if not(cw>4)then if(ba[139]<4)then local a,c,d,f d=ba[103]a,f=bm(cy[d](bi(cy,(d+1),cu)))cs=(f+d-1)c=0 for f=d,cs do c=(c+1);cy[f]=a[c];end;else n[cu]=cy[i];end else do if(cw<6)then local a,c,d,f f=i do a,c=bm(cy[f](cy[(f+1)]))end cs=(c+f-z)d=0 for c=f,cs do do d=(d+1);end cy[c]=a[d];end;else cy[i]=(cy[ba[31]]%v[ba[50]]);end end end else do if not(cw<1)then if not(ba[139]~=1)then cy[i]=(cy[cu]/v[ct]);else cy[i]=t[v[cu]];end else cy[i]=(cy[cu]+v[ct]);end end end end end end else do if not(ba[139]<21)then do if not(ba[139]<24)then if not(ba[139]<26)then if(ba[139]>26)then cy[i]();else if((v[i]<cy[ct]))then cv=cu;end;end else if(cw<25)then cy[i][v[cu]]=cy[ct];else local a a=i do cy[a](cy[(a+1)])end end end else do if not(cw<22)then if not(cw~=22)then if((cy[i]<v[ct]))then cv=cu;end;else local a,c,d do c=u[cu]end a=nil do d={}end a=bv({},{__index=function(f,f)local f=d[f];return f[1][f[2]];end,__newindex=function(f,f,h)local f=d[f]f[1][f[2]]=h;end;});for f=1,ct do local h do h=ba[65][f]end if h[1]then d[(f-1)]={cy,h[2],nil,nil,nil,nil};else do d[(f-1)]={n,h[2],nil,nil,nil,nil};end end;bd[(#bd+1)]=d;end;do cy[i]=bq(c,a,t);end end else cy[i]=cy[cu][v[ba[50]]];end end end end else do if not(ba[139]>16)then if not(cw>14)then cv=cu;else if not(cw~=15)then if not cy[i]then cv=ba[31];end;else cy[i]=(0~=cu);end end else do if not(cw<19)then if(cw>19)then cy[i]=nil;else do do return cy[ba[103]]end end end else do if(cw<18)then local a,c c=ba[103]a=cy[ba[31]]cy[(c+1)]=a;cy[c]=a[v[ct]];else if cy[i]then cv=cu;end;end end end end end end end end end end cv=(cv+1);end;end;end end end else if be>=1239 then if be<=1239 then be=1268 by=function(a,a,a)local a,c,d,f=51,68,68,69,20,21,53,53,33,64,33,67,75 while a~=34 do if c<=133 then if c<=68 then c=115 d,f=nil else if c<126 then c=133 f=cp()else c=161 d=cr:sub(bz,(bz+f-1))end end else if c>=192 then if c<231 then c=237 return d;else a=34;end else bz=(bz+f);c=192 end end end end else if be>1270 then bj={}be=1344 else be=1317 bm=function(...)return{...},bg('#',...)end end end else if be>1177 then cn=function()local a,c,d,f,h,i,j,n=63,52,17,68,72,10,59,39,64,56,24,43,94,61,99,81,19 while a~=41 do if c<=192 then if c<=100 then if c<94 then d,f,h,i,j,n=nil c=100 else n=cp()c=145 end else if c<=145 then i=cp()c=160 else if c>162 then c=209 h=((-1)^ce(31,i,1))else c=192 if((n==0 and i==k))then return 0 end end end end else if c>=307 then if c<=307 then if not(j~=0)then if 0~=f then j=1 d=0 else return(h*0)end elseif 2047~=j then else if not(f~=0)then do return(h*(0/0))end else return(h*(1/0))end end c=344 else if c<382 then c=388 return(h*(2^(j-1023))*(f/bs+d))else a=41;end end else if c<=209 then j=ce(20,i,11)c=245 else if c>247 then d=1 c=307 else f=(ce(0,i,20)*4294967296+n)c=264 end end end end end end be=1239 else be=1215 bw=function()local a,c c,a=br(cr,bz,(bz+2))bz=(bz+2);return((a*256)+c);end end end end end else if be<=430 then if be<=198 then if be>=124 then if be>=168 then if be<193 then be=198 ck=string.sub else do bt=string.gsub end be=230 end else cm=string.char be=168 end else if be>79 then br=string.byte be=124 else be=105 bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr=nil end end else if be>=355 then if be<=355 then be=395 cd=math.ldexp else if be<427 then be=430 co=(getfenv or function()return _ENV end)else do bv=setmetatable end be=456 end end else if be>=265 then if be>271 then be=355 do ci=table.insert end else ch=table.concat be=313 end else do bp=string.rep end be=265 end end end else if be>=589 then if be<=656 then if be<=589 then be=619 bi=(unpack or table.unpack)else if be<653 then bu=tonumber be=656 else be=685 ca={}end end else if be>=732 then if be>739 then be=782 bx={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,l,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,g,12,13,14,15,8,9,10,bb,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,q,},{6,7,4,w,o,3,0,1,14,15,12,m,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,e,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,p,2,1,0,7,6,5,4,},{12,13,14,15,8,9,bc,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,x,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,b,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil,nil,nil}else be=762 cr=bts,function(a,b)return ca[bu(a,16)]end)end else do for a=0,255 do ca[a]=cm(a);end end be=732 end end else if be>=512 then if be>=533 then if be<559 then bk=math.abs be=562 else be=589 bh=math.floor end else bl=(function(a,b)if not(cl(a)~='number')then return true else return false end end)be=533 end else if be>463 then cl=type be=512 else be=481 bg=select end end end end end end end)(29,1,1,31,12,31,3,1,1,50,0,1,13,1,2,3,10,103,'..',1,11,2,5,10,65536,1,11,11,10)
